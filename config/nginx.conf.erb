daemon off;
# Heroku dynos have at least 4 cores
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;
    server_tokens off;

    log_format main '$time_iso8601 - $status $request - client IP: $http_x_forwarded_for - to $upstream_addr - upstream status: $upstream_status, upstream_response_time $upstream_response_time, request_time $request_time';
    access_log /dev/stdout main;
    # set the following to "debug" when diagnosing an issue
    error_log /dev/stdout notice;
    log_not_found on;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # Must read the body in 5 seconds.
    client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;

    # handle SNI
    proxy_ssl_server_name on;
    proxy_ssl_name *.herokuapp.com;
    # resolver needs to be set because we're using dynamic proxy_pass
    resolver 8.8.8.8;

    upstream heroku_apps {
        server intradarmajaya-dev.herokuapp.com:443;
        server intradarmajaya-stage.herokuapp.com:443;
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name _;

        location / {
            set $upstream heroku_apps;
            if ($upstream ~ 00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15) {
                set $backend_url https://intradarmajaya-dev.herokuapp:443;
                set $backend_host intradarmajaya-dev.herokuapp.com;
            }
            if ($upstream ~ 00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15) {
                set $backend_url https://intradarmajaya-stage.herokuapp:443;
                set $backend_host intradarmajaya-stage.herokuapp.com;
            }
            proxy_pass $backend_url;
            proxy_set_header Host $backend_host;
            proxy_set_header x-forwarded-host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

    }
}
